// Script simples para testar a configura√ß√£o do Instagram
// Execute com: node test-instagram-config.js

const SUPABASE_URL = 'https://htwwbtqsdhibxkrdfvsm.supabase.co';

async function testInstagramConfig() {
  console.log('üß™ Testando configura√ß√£o do Instagram...\n');

  try {
    // Test 1: Check if the edge function exists
    console.log('üì° Testando Edge Function...');
    const response = await fetch(`${SUPABASE_URL}/functions/v1/instagram-oauth-start`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': 'Bearer test-token', // Will fail but tells us about config
      }
    });

    const result = await response.text();
    console.log('Status:', response.status);
    console.log('Response:', result);

    if (response.status === 401) {
      console.log('‚úÖ Edge Function existe (erro de autentica√ß√£o √© esperado)');
    } else if (response.status === 500) {
      if (result.includes('META_APP_ID not configured')) {
        console.log('‚ùå META_APP_ID n√£o est√° configurado');
        console.log('\nüí° Para corrigir:');
        console.log('1. Acesse o Supabase Dashboard');
        console.log('2. V√° para Settings ‚Üí Environment Variables');
        console.log('3. Adicione: META_APP_ID e META_APP_SECRET');
      } else {
        console.log('‚ùå Erro na configura√ß√£o:', result);
      }
    } else {
      console.log('‚úÖ Edge Function respondeu:', result);
    }

  } catch (error) {
    console.error('‚ùå Erro ao testar configura√ß√£o:', error.message);
  }

  console.log('\nüìã Checklist de configura√ß√£o:');
  console.log('‚ñ° App criado no Meta for Developers');
  console.log('‚ñ° META_APP_ID configurado no Supabase');
  console.log('‚ñ° META_APP_SECRET configurado no Supabase');
  console.log('‚ñ° URIs de redirecionamento configurados no Meta');
  console.log('‚ñ° Permiss√µes do Instagram configuradas');
  console.log('\nüìñ Consulte INSTAGRAM_SETUP.md para instru√ß√µes detalhadas');
}

testInstagramConfig();
